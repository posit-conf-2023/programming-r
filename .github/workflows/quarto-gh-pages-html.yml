# based on: 
#  - https://github.com/quarto-dev/quarto-actions/blob/main/examples/quarto-book-gh-pages.yaml
#  - https://github.com/actions/starter-workflows/blob/main/pages/static.yml

on:
  push:
    branches: main
  pull_request:
    branches: main
  # to be able to trigger a manual build
  workflow_dispatch:

name: Build and deploy Quarto site

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          
      - uses: r-lib/actions/setup-renv@v2

      - name: Install Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Render Quarto project
        uses: quarto-dev/quarto-actions/render@v2
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # hard-coding `_site` feels a little gross, but it works
          path: _site
          
      - name: Report locale
        run: Sys.getlocale("LC_COLLATE")
        shell: Rscript {0}
      
  deploy:
    if: github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v3
        
      - name: Setup pages
        uses: actions/configure-pages@v3
        
      - name: Deploy to GitHub pages
        id: deployment
        uses: actions/deploy-pages@v2
        